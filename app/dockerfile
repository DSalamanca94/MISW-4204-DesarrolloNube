# Use the official Python image as your base image
FROM python:3.10-alpine

# Set the working directory inside the container
WORKDIR /app

# Copy your application code and requirements file into the container
COPY requirements.txt requirements.txt
COPY . .

# Install the required Python packages
RUN pip3 install -r requirements.txt

# Create a directory for temporary files
RUN mkdir /app/temp

# Install FFmpeg from Alpine Linux testing repository
RUN apk add --no-cache --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing ffmpeg

# Install Redis
RUN apk add --no-cache redis

# Expose any ports that your application might be using (e.g., for web services)
EXPOSE 80

# Define an entry point for your container
ENTRYPOINT [ "python", "app.py" ]

# The CMD is your default command when you start the container, and it will run Celery
CMD [ "celery", "-A", "vistas.vistas", "worker", "-l" ]

# Start Redis server when the container starts
CMD ["redis-server" , "--daemonize" , "yes"]